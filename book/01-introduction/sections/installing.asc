=== Git 安裝教學

在你開始使用 Git 以前，你必須先在你的電腦設定到讓 Git 可以使用。
如果你之前已經安裝過，那麼你應該確認 Git 已經升級到最新版。
你可以使用套件（package）進行安裝、透過安裝程式或是自行下載原始碼自己編譯。

[NOTE]
====
本書在撰寫時，Git 的版本為 *2.0.0*。 雖然本書使用到的指令在比較舊版的 Git 中通常都可以使用，但是仍然會有一些指令的行為相差極大或是根本無法使用。 Git 提供了相當出色的向下相容性，所以如果你目前的 Git 版本大於 2.0，那麼應該是不會有什麼太大的問題。
====

==== 在 Linux 安裝

(((Linux, installing)))
如果你想要透過二進位安裝程式安裝 Git，你通常可以直接透過你所用的發行版（distribution）內建的基礎套件管理工具。
舉例來說，如果你使用的是 Fedora，你可以使用 yum：

  $ yum install git

如果你是使用 Debian 系列的發行版，如 Ubuntu，你可以使用 apt-get：

  $ apt-get install git

如果需要更多選擇，Git 官方網站上有更多其他的發行版中安裝 Git 的安裝步驟，網址為 http://git-scm.com/download/linux[]。

==== 在 Mac 中安裝

(((Mac, installing)))
在 Mac 中安裝 Git 有很多種方法。
最簡單的方法應該就是直接安裝 Xcode 命令列開發者工具（Xcode Command Line Tools）。(((Xcode)))
在 Mavericks (10.9) 或更新版的系統中，你甚至可以直接在終端機中直接打入 ``git'' 指令。
如果系統發現你還沒安裝過，便會自動提示你進行安裝。

如果你希望安裝更新的版本，你也可以透過二進位安裝程式安裝。
在 Git 官方網站上有維護最新版的安裝程式可供下載，網址在 http://git-scm.com/download/mac[]。

.Git OS X 安裝程式
image::images/git-osx-installer.png[Git OS X 安裝程式]

你還可以透過 GitHub 的 Mac 安裝程式來安裝。
GitHub 的 Git 圖形化工具有提供相對應的選項讓你安裝 Git 命令列工具。

你可以從 GitHub for Mac 官方網站下載，網址在 http://mac.github.com[]。

==== 在 Windows 中安裝

在 Windows 中安裝 Git 也有很多種方式。(((Windows, installing)))
最正式的安裝程式在 Git 官方網站可供下載。
你只需要連到 http://git-scm.com/download/win[] 然後下載就會自動開始。
請注意這是一個名為 Git for Windows 的專案（也可稱為 msysGit），與 Git 本身是互相獨立的。如果你需要更多資料，請查閱 http://msysgit.github.io/[]。

另一個安裝 Git 的簡單方法就是直接安裝 GitHub for Window。
這個安裝程式內已經預設提供 Git 的命令列版本和圖形化工具。
而且它也能夠完美搭配 Powershell，設定實體憑證快取和完整的 CRLF 設定。(((Powershell)))(((CRLF)))(((credential caching)))
我們將會在本書的其他章節學到這些事情，但我只想強調，這就是你需要的東西。
你可以直接從 GitHub for Windows 下載，網址在 http://windows.github.com[]。


==== 從原始碼安裝

某些人可能會發現從原始碼安裝 Git 反而比較好用，因為你可以拿到最新的 Git 版本。
通常二進位安裝程式都會落後於 Git 原始碼的版本，雖然 Git 近幾年已經逐漸成熟，兩者的版本差異可能不大。

如果你希望從原始碼安裝 Git，你需要擁有以下 Git 所需的函式庫：curl, zlib, openssl, expat 和 libiconv。
舉例來說，如果你的系統有 yum（例如 Fedora）或 apt-get（例如 Debian 系列的發行版），你可以使用其中一個指令來安裝這些最小相依關係（the minimal dependencies），這樣才有辦法安裝編譯並安裝 Git 可執行檔。

  $ yum install curl-devel expat-devel gettext-devel \
    openssl-devel zlib-devel

  $ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \
    libz-dev libssl-dev

為了能夠建立這些格式（doc、html、info）的文件，你還需要安裝這些額外的相依關係：

  $ yum install asciidoc xmlto docbook2x

  $ apt-get install asciidoc xmlto docbook2x

當你成功的安裝所有必備的相依關係，你就可以繼續下一步：從以下其中一個地方抓回最新的 Git 原始碼 tarball 壓縮檔。
你可以從 Kernel.org 網站取得，網址在 https://www.kernel.org/pub/software/scm/git[]；或是在 GitHub 上面的鏡像，網址在 https://github.com/git/git/releases[]。
通常在 GitHub 網站上你會比較容易知道哪個原始碼是最新的；但是在 kernel.org 網站上會同時提供該檔案的數位簽章，以便你下載後對檔案進行驗證。

再來，編譯並安裝 Git：

  $ tar -zxf git-2.0.0.tar.gz
  $ cd git-2.0.0
  $ make configure
  $ ./configure --prefix=/usr
  $ make all doc info
  $ sudo make install install-doc install-html install-info

當你安裝完以後，你就可以透過 Git 來取得 Git 最新的原始碼如下：

  $ git clone git://git.kernel.org/pub/scm/git/git.git
